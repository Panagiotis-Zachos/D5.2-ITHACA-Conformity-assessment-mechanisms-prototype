# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'visualComp.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys

import numpy as np
from PyQt5 import Qt, QtCore, QtGui, QtWidgets
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *

class Ui_MainWindow_User(object):
    def setupUi(self, MainWindow):
        """
        Set up the user interface for the main window.
        This method initializes and configures the main window and its widgets, including layouts, labels, buttons, and other UI elements. It also sets up styles, fonts, and connections for various UI components.
        Args:
            MainWindow (QMainWindow): The main window object to set up the UI for.
        Attributes:
            centralwidget (QWidget): The central widget of the main window.
            horizontalLayout_3 (QHBoxLayout): The main horizontal layout.
            verticalGroupBox_2 (QGroupBox): A group box containing a vertical layout.
            verticalLayout_3 (QVBoxLayout): A vertical layout within the group box.
            label_5 (QLabel): A label displaying an image.
            pushButton (QPushButton): A button to close the main window.
            verticalLayout_5 (QVBoxLayout): Another vertical layout.
            verticalLayout_4 (QVBoxLayout): A vertical layout containing labels and lines.
            line_11 (QFrame): A horizontal line.
            label_6 (QLabel): A label with specific styles.
            line_8 (QFrame): Another horizontal line.
            horizontalLayout (QHBoxLayout): Another horizontal layout.
            line_7 (QFrame): Another horizontal line.
            verticalLayout (QVBoxLayout): A vertical layout for additional widgets.
            horizontalLayout_Fairness (QHBoxLayout): A horizontal layout for fairness-related widgets.
            widget_weekly (QWidget): A widget for weekly metrics.
            verticalLayout_weekly (QVBoxLayout): A vertical layout within the weekly widget.
            label_weekly (QLabel): A label for weekly metrics.
            line_weekly (QFrame): A horizontal line within the weekly widget.
            weekly_stars2 (QTextBrowser): A text browser displaying weekly metrics.
            widget_monthly (QWidget): A widget for monthly metrics.
            verticalLayout_monthly (QVBoxLayout): A vertical layout within the monthly widget.
            label_monthly (QLabel): A label for monthly metrics.
            line_monthly (QFrame): A horizontal line within the monthly widget.
            monthly_stars2 (QTextBrowser): A text browser displaying monthly metrics.
            widget_lifetime (QWidget): A widget for lifetime metrics.
            verticalLayout_lifetime (QVBoxLayout): A vertical layout within the lifetime widget.
            label_lifetime (QLabel): A label for lifetime metrics.
            line_lifetime (QFrame): A horizontal line within the lifetime widget.
            lifetime_stars2 (QTextBrowser): A text browser displaying lifetime metrics.
            fairness_image (QLabel): An image label for fairness.
            fairness_image3 (QLabel): Another image label for fairness.
            fairness_image_2 (QLabel): Another image label for fairness.
            label_plat_stats (QLabel): A label for platform statistics.
            widget_weekly_platform (QWidget): A widget for weekly platform metrics.
            verticalLayout_weekly_platform (QVBoxLayout): A vertical layout within the weekly platform widget.
            label_weekly_platform (QLabel): A label for weekly platform metrics.
            line_weekly_platform (QFrame): A horizontal line within the weekly platform widget.
            weekly_stars2_platform (QTextBrowser): A text browser displaying weekly platform metrics.
            widget_monthly_platform (QWidget): A widget for monthly platform metrics.
            verticalLayout_monthly_platform (QVBoxLayout): A vertical layout within the monthly platform widget.
            label_monthly_platform (QLabel): A label for monthly platform metrics.
            line_monthly_platform (QFrame): A horizontal line within the monthly platform widget.
            monthly_stars2_platform (QTextBrowser): A text browser displaying monthly platform metrics.
            widget_lifetime_platform (QWidget): A widget for lifetime platform metrics.
            verticalLayout_lifetime_platform (QVBoxLayout): A vertical layout within the lifetime platform widget.
            label_lifetime_platform (QLabel): A label for lifetime platform metrics.
            line_lifetime_platform (QFrame): A horizontal line within the lifetime platform widget.
            lifetime_stars2_platform (QTextBrowser): A text browser displaying lifetime platform metrics.
            horizontalLayout_Cybersecurity (QHBoxLayout): A horizontal layout for cybersecurity-related widgets.
            verticalLayout_tool_status (QVBoxLayout): A vertical layout for tool status.
            tableWidget (QTableWidget): A table widget displaying tool status.
            pushButton_info_tool_status (QPushButton): A button to show information about tool status.
            menubar (QMenuBar): The menu bar of the main window.
            statusbar (QStatusBar): The status bar of the main window.
        """
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1851, 1173)
        font = QtGui.QFont()
        font.setPointSize(14)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet(
            "background-color: rgba(0, 45, 136, 255);\n"
            "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 45, 136, 255), stop:1 rgba(255, 255, 255, 255));"
        )
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum
        )
        self.horizontalLayout_3.addItem(spacerItem)
        self.verticalGroupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.verticalGroupBox_2.setMinimumSize(QtCore.QSize(100, 0))
        self.verticalGroupBox_2.setMaximumSize(QtCore.QSize(150, 16777215))
        self.verticalGroupBox_2.setSizeIncrement(QtCore.QSize(400, 400))
        self.verticalGroupBox_2.setStyleSheet(
            "background-color: rgb(255, 255, 255, 150);\n"
            "alternate-background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.verticalGroupBox_2.setObjectName("verticalGroupBox_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalGroupBox_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_5 = QtWidgets.QLabel(self.verticalGroupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(20)
        sizePolicy.setVerticalStretch(20)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setMinimumSize(QtCore.QSize(40, 50))
        self.label_5.setMaximumSize(QtCore.QSize(150, 150))
        self.label_5.setSizeIncrement(QtCore.QSize(20, 20))
        self.label_5.setBaseSize(QtCore.QSize(20, 20))
        self.label_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_5.setText("")
        self.label_5.setPixmap(QtGui.QPixmap("figures/Ithaca_logo.jpg"))
        self.label_5.setScaledContents(True)
        self.label_5.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignTop)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_3.addWidget(self.label_5)
        spacerItem1 = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding
        )
        self.verticalLayout_3.addItem(spacerItem1)

        self.pushButton = QtWidgets.QPushButton(self.verticalGroupBox_2)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet(
            """QPushButton
                                                    {
                                                    background-color: rgb(255, 255, 255, 150); color: black;
                                                    border-color: rgb(172, 172, 172);
                                                    alternate-background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));
                                                    border-color: rgb(255, 255, 255);
                                                    }
                                                    QPushButton:pressed
                                                    {
                                                    background-color : rgb(255, 255, 255, 255); color: rgb(255,255,255);
                                                    }"""
        )
        self.pushButton.setObjectName("pushButton")
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setMinimumSize(QtCore.QSize(50, 20))

        self.pushButton.clicked.connect(self.close)

        self.verticalLayout_3.addWidget(self.pushButton)
        self.label_5.raise_()
        self.pushButton.raise_()
        self.horizontalLayout_3.addWidget(self.verticalGroupBox_2)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        spacerItem2 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout_5.addItem(spacerItem2)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.line_11 = QtWidgets.QFrame(self.centralwidget)
        self.line_11.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_11.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_11.setObjectName("line_11")
        self.verticalLayout_4.addWidget(self.line_11)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet(
            "background-color: rgba(0, 45, 136, 70);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label_6.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_4.addWidget(self.label_6)
        self.line_8 = QtWidgets.QFrame(self.centralwidget)
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.verticalLayout_4.addWidget(self.line_8)
        spacerItem3 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout_4.addItem(spacerItem3)
        self.verticalLayout_5.addLayout(self.verticalLayout_4)
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem4 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum
        )
        self.horizontalLayout.addItem(spacerItem4)
        self.line_7 = QtWidgets.QFrame(self.centralwidget)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.horizontalLayout.addWidget(self.line_7)

        # Bgazw th lista kai bazw koumpia mono se vertical layout
        #         self.listWidget = QtWidgets.QListWidget(self.scrollAreaWidgetContents)
        #         self.listWidget.setStyleSheet("background-color: rgb(255, 255, 255, 150);\n"
        # "target->window()->setAttribute(Qt::WA_TranslucentBackground);\n"
        # "")
        #         self.listWidget.setObjectName("listWidget")
        #
        #         self.listWidget.addItems(self.readTweets())
        #         # self.listWidget.addItem()
        #         self.verticalLayout_2.addWidget(self.listWidget)

        # Add buttons as clickable tweets

        spacerItem5 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum
        )
        self.horizontalLayout.addItem(spacerItem5)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem6 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout.addItem(spacerItem6)
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label.setFrameShape(QtWidgets.QFrame.Box)
        self.label.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        spacerItem7 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout.addItem(spacerItem7)
        # self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        # Changed QTextBrowser to QPlainTextEdit so as to edit the text that appears
        # ******
        self.horizontalLayout_Fairness = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_Fairness.setObjectName("horizontalLayout_Fairness")
        # ************************ WEEKLY ************************ #
        self.widget_weekly = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(
            self.widget_weekly.sizePolicy().hasHeightForWidth()
        )
        self.widget_weekly.setSizePolicy(sizePolicy)
        self.widget_weekly.setMinimumSize(QtCore.QSize(450, 0))
        self.widget_weekly.setMaximumSize(QtCore.QSize(300, 300))
        self.widget_weekly.setSizeIncrement(QtCore.QSize(40, 40))
        self.widget_weekly.setBaseSize(QtCore.QSize(40, 40))
        self.widget_weekly.setFocusPolicy(QtCore.Qt.NoFocus)
        self.widget_weekly.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.widget_weekly.setObjectName("widget_weekly")
        self.verticalLayout_weekly = QtWidgets.QVBoxLayout(self.widget_weekly)
        self.verticalLayout_weekly.setSizeConstraint(
            QtWidgets.QLayout.SetDefaultConstraint
        )
        self.verticalLayout_weekly.setObjectName("verticalLayout_weekly")
        spacerItem_ppml = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.label_weekly = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_weekly.setFont(font)
        self.label_weekly.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label_weekly.setObjectName("label_weekly")
        self.verticalLayout_weekly.addWidget(self.label_weekly)
        self.line_weekly = QtWidgets.QFrame(self.widget_weekly)
        self.line_weekly.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_weekly.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_weekly.setStyleSheet("background-color: rgba(255, 255, 255, 100);")
        self.line_weekly.setObjectName("line_weekly")
        self.verticalLayout_weekly.addWidget(self.line_weekly)
        # self.weekly_stars = QtWidgets.QLabel(self.widget_weekly)
        # self.weekly_stars.setStyleSheet("background-color: rgb(255, 255, 255, 100);\n"
        #                               "border: 5px; \n"
        #                               "border-radius: 10px;")
        # self.weekly_stars.setObjectName("weekly_stars")
        # font_textBrowser = QtGui.QFont()
        # font_textBrowser.setPointSize(16)
        # font_textBrowser.setWeight(QFont.Bold)
        # self.weekly_stars.setFont(font_textBrowser)
        # self.weekly_stars.setText("\n" + "Metrics after 50 epochs\n")
        # self.weekly_stars.setAlignment(QtCore.Qt.AlignCenter)
        self.weekly_stars2 = QtWidgets.QTextBrowser(self.widget_weekly)
        self.weekly_stars2.setStyleSheet(
            "background-color: rgb(255, 255, 255, 200);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.weekly_stars2.setObjectName("weekly_stars2")
        font_textBrowser = QtGui.QFont()
        font_textBrowser.setPointSize(14)
        self.weekly_stars2.setFont(font_textBrowser)
        self.weekly_stars2.setText(
            "\n"
            + " Chatbot                         | Fairness: 0.679 \n"
            + "                                    | Privacy  : 0.903\n"
            "                                    | Security: 0.889\n"
            " Toxicity Speech Detection| Fairness: 0.432 \n"
            "                                     | Privacy  : 0.850 \n"
            "                                     | Security: 0.799 \n"
        )
        self.weekly_stars2.selectAll()
        self.weekly_stars2.setAlignment(QtCore.Qt.AlignCenter)
        # self.verticalLayout_weekly.addWidget(self.weekly_stars)
        self.verticalLayout_weekly.addWidget(self.weekly_stars2)
        # ************************ MONTHLY ************************ #
        self.widget_monthly = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(
            self.widget_monthly.sizePolicy().hasHeightForWidth()
        )
        self.widget_monthly.setSizePolicy(sizePolicy)
        self.widget_monthly.setMinimumSize(QtCore.QSize(450, 0))
        self.widget_monthly.setMaximumSize(QtCore.QSize(300, 300))
        self.widget_monthly.setSizeIncrement(QtCore.QSize(40, 40))
        self.widget_monthly.setBaseSize(QtCore.QSize(40, 40))
        self.widget_monthly.setFocusPolicy(QtCore.Qt.NoFocus)
        self.widget_monthly.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.widget_monthly.setObjectName("widget_monthly")
        self.verticalLayout_monthly = QtWidgets.QVBoxLayout(self.widget_monthly)
        self.verticalLayout_monthly.setSizeConstraint(
            QtWidgets.QLayout.SetDefaultConstraint
        )
        self.verticalLayout_monthly.setObjectName("verticalLayout_monthly")
        spacerItem_ppml = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.label_monthly = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_monthly.setFont(font)
        self.label_monthly.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label_monthly.setObjectName("label_monthly")
        self.verticalLayout_monthly.addWidget(self.label_monthly)
        self.line_monthly = QtWidgets.QFrame(self.widget_monthly)
        self.line_monthly.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_monthly.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_monthly.setStyleSheet("background-color: rgba(255, 255, 255, 100);")
        self.line_monthly.setObjectName("line_monthly")
        self.verticalLayout_monthly.addWidget(self.line_monthly)
        # self.weekly_stars = QtWidgets.QLabel(self.widget_weekly)
        # self.weekly_stars.setStyleSheet("background-color: rgb(255, 255, 255, 100);\n"
        #                               "border: 5px; \n"
        #                               "border-radius: 10px;")
        # self.weekly_stars.setObjectName("weekly_stars")
        # font_textBrowser = QtGui.QFont()
        # font_textBrowser.setPointSize(16)
        # font_textBrowser.setWeight(QFont.Bold)
        # self.weekly_stars.setFont(font_textBrowser)
        # self.weekly_stars.setText("\n" + "Metrics after 50 epochs\n")
        # self.weekly_stars.setAlignment(QtCore.Qt.AlignCenter)
        self.monthly_stars2 = QtWidgets.QTextBrowser(self.widget_monthly)
        self.monthly_stars2.setStyleSheet(
            "background-color: rgb(255, 255, 255, 200);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.monthly_stars2.setObjectName("monthly_stars2")
        font_textBrowser = QtGui.QFont()
        font_textBrowser.setPointSize(14)
        self.monthly_stars2.setFont(font_textBrowser)
        self.monthly_stars2.setText(
            "\n"
            + " Chatbot                         | Fairness: 0.876 \n"
            + "                                    | Privacy  : 0.937\n"
            "                                    | Security: 0.910\n"
            " Toxicity Speech Detection| Fairness: 0.940 \n"
            "                                     | Privacy  : 0.962 \n"
            "                                     | Security: 0.908 \n"
        )
        self.monthly_stars2.selectAll()
        self.monthly_stars2.setAlignment(QtCore.Qt.AlignCenter)
        # self.verticalLayout_weekly.addWidget(self.weekly_stars)
        self.verticalLayout_monthly.addWidget(self.monthly_stars2)

        # ************************ LIFETIME ************************ #
        self.widget_lifetime = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(
            self.widget_lifetime.sizePolicy().hasHeightForWidth()
        )
        self.widget_lifetime.setSizePolicy(sizePolicy)
        self.widget_lifetime.setMinimumSize(QtCore.QSize(450, 0))
        self.widget_lifetime.setMaximumSize(QtCore.QSize(300, 300))
        self.widget_lifetime.setSizeIncrement(QtCore.QSize(40, 40))
        self.widget_lifetime.setBaseSize(QtCore.QSize(40, 40))
        self.widget_lifetime.setFocusPolicy(QtCore.Qt.NoFocus)
        self.widget_lifetime.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.widget_lifetime.setObjectName("widget_lifetime")
        self.verticalLayout_lifetime = QtWidgets.QVBoxLayout(self.widget_lifetime)
        self.verticalLayout_lifetime.setSizeConstraint(
            QtWidgets.QLayout.SetDefaultConstraint
        )
        self.verticalLayout_lifetime.setObjectName("verticalLayout_lifetime")
        spacerItem_ppml = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.label_lifetime = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_lifetime.setFont(font)
        self.label_lifetime.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label_lifetime.setObjectName("label_lifetime")
        self.verticalLayout_lifetime.addWidget(self.label_lifetime)
        self.line_lifetime = QtWidgets.QFrame(self.widget_lifetime)
        self.line_lifetime.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_lifetime.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_lifetime.setStyleSheet("background-color: rgba(255, 255, 255, 100);")
        self.line_lifetime.setObjectName("line_lifetime")
        self.verticalLayout_lifetime.addWidget(self.line_lifetime)
        # self.weekly_stars = QtWidgets.QLabel(self.widget_weekly)
        # self.weekly_stars.setStyleSheet("background-color: rgb(255, 255, 255, 100);\n"
        #                               "border: 5px; \n"
        #                               "border-radius: 10px;")
        # self.weekly_stars.setObjectName("weekly_stars")
        # font_textBrowser = QtGui.QFont()
        # font_textBrowser.setPointSize(16)
        # font_textBrowser.setWeight(QFont.Bold)
        # self.weekly_stars.setFont(font_textBrowser)
        # self.weekly_stars.setText("\n" + "Metrics after 50 epochs\n")
        # self.weekly_stars.setAlignment(QtCore.Qt.AlignCenter)
        self.lifetime_stars2 = QtWidgets.QTextBrowser(self.widget_lifetime)
        self.lifetime_stars2.setStyleSheet(
            "background-color: rgb(255, 255, 255, 200);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.lifetime_stars2.setObjectName("lifetime_stars2")
        font_textBrowser = QtGui.QFont()
        font_textBrowser.setPointSize(14)
        self.lifetime_stars2.setFont(font_textBrowser)
        self.lifetime_stars2.setText(
            "\n"
            + " Chatbot                         | Fairness: 0.900 \n"
            + "                                    | Privacy  : 0.914\n"
            "                                    | Security: 0.899\n"
            " Toxicity Speech Detection| Fairness: 0.921 \n"
            "                                     | Privacy  : 0.888 \n"
            "                                     | Security: 0.910 \n"
        )
        self.lifetime_stars2.selectAll()
        self.lifetime_stars2.setAlignment(QtCore.Qt.AlignCenter)
        # self.verticalLayout_weekly.addWidget(self.weekly_stars)
        self.verticalLayout_lifetime.addWidget(self.lifetime_stars2)

        # self.verticalLayout.addWidget(self.textBrowser)
        self.verticalLayout.addLayout(self.horizontalLayout_Fairness)
        self.horizontalLayout_Fairness.addWidget(self.widget_weekly)

        self.fairness_image = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.fairness_image.setSizePolicy(sizePolicy)
        self.fairness_image.setMinimumSize(QtCore.QSize(90, 0))
        self.fairness_image.setMaximumSize(QtCore.QSize(90, 100))
        self.fairness_image.setSizeIncrement(QtCore.QSize(90, 90))
        self.fairness_image.setBaseSize(QtCore.QSize(60, 60))
        self.fairness_image.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.fairness_image.setText("")
        self.fairness_image.setStyleSheet(
            "background-color: rgba(255, 255, 255, 150);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.fairness_image.setPixmap(
            QtGui.QPixmap("figures/emoji-sad-icon-512x512-vomssqlr.png")
        )
        self.fairness_image.setScaledContents(True)
        self.fairness_image.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignTop)
        self.fairness_image.setObjectName("fairness_image")
        self.horizontalLayout_Fairness.addWidget(self.fairness_image)
        self.horizontalLayout_Fairness.addWidget(self.widget_monthly)

        # ******
        self.fairness_image3 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.fairness_image3.setSizePolicy(sizePolicy)
        self.fairness_image3.setMinimumSize(QtCore.QSize(90, 0))
        self.fairness_image3.setMaximumSize(QtCore.QSize(90, 100))
        self.fairness_image3.setSizeIncrement(QtCore.QSize(90, 90))
        self.fairness_image3.setBaseSize(QtCore.QSize(60, 60))
        self.fairness_image3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.fairness_image3.setText("")
        self.fairness_image3.setStyleSheet(
            "background-color: rgba(255, 255, 255, 150);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.fairness_image3.setPixmap(QtGui.QPixmap("figures/Happy-512.png"))
        self.fairness_image3.setScaledContents(True)
        self.fairness_image3.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignTop)
        self.fairness_image3.setObjectName("fairness_image3")
        self.horizontalLayout_Fairness.addWidget(self.fairness_image3)
        # ******
        # self.verticalLayout.addWidget(self.plainTextEdit)
        # self.horizontalLayout_Fairness2.addWidget(self.plainTextEdit)
        self.fairness_image_2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.fairness_image_2.setSizePolicy(sizePolicy)
        self.fairness_image_2.setMinimumSize(QtCore.QSize(90, 0))
        self.fairness_image_2.setMaximumSize(QtCore.QSize(90, 100))
        self.fairness_image_2.setSizeIncrement(QtCore.QSize(90, 90))
        self.fairness_image_2.setBaseSize(QtCore.QSize(60, 60))
        self.fairness_image_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.fairness_image_2.setText("")
        self.fairness_image_2.setStyleSheet(
            "background-color: rgba(255, 255, 255, 150);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.fairness_image_2.setPixmap(QtGui.QPixmap("figures/Happy-512.png"))
        self.fairness_image_2.setScaledContents(True)
        self.fairness_image_2.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignTop)
        self.fairness_image_2.setObjectName("fairness_image_2")
        # self.horizontalLayout_Fairness2.addWidget(self.fairness_image_2)
        # self.horizontalLayout_Fairness.addWidget(self.plainTextEdit)
        self.horizontalLayout_Fairness.addWidget(self.widget_lifetime)
        self.horizontalLayout_Fairness.addWidget(self.fairness_image_2)

        spacerItem_plat_stats2 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout.addItem(spacerItem_plat_stats2)
        self.label_plat_stats = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_plat_stats.setFont(font)
        self.label_plat_stats.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label_plat_stats.setFrameShape(QtWidgets.QFrame.Box)
        self.label_plat_stats.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_plat_stats.setObjectName("label_plat_stats")
        self.verticalLayout.addWidget(self.label_plat_stats)
        spacerItem_plat_stats = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout.addItem(spacerItem_plat_stats)

        # ************************ WEEKLY PLATFORM ************************ #
        self.widget_weekly_platform = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(
            self.widget_weekly_platform.sizePolicy().hasHeightForWidth()
        )
        self.widget_weekly_platform.setSizePolicy(sizePolicy)
        self.widget_weekly_platform.setMinimumSize(QtCore.QSize(550, 0))
        self.widget_weekly_platform.setMaximumSize(QtCore.QSize(400, 400))
        self.widget_weekly_platform.setSizeIncrement(QtCore.QSize(40, 40))
        self.widget_weekly_platform.setBaseSize(QtCore.QSize(40, 40))
        self.widget_weekly_platform.setFocusPolicy(QtCore.Qt.NoFocus)
        self.widget_weekly_platform.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.widget_weekly_platform.setObjectName("widget_weekly_platform")
        self.verticalLayout_weekly_platform = QtWidgets.QVBoxLayout(
            self.widget_weekly_platform
        )
        self.verticalLayout_weekly_platform.setSizeConstraint(
            QtWidgets.QLayout.SetDefaultConstraint
        )
        self.verticalLayout_weekly_platform.setObjectName(
            "verticalLayout_weekly_platform"
        )
        spacerItem_ppml = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.label_weekly_platform = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_weekly_platform.setFont(font)
        self.label_weekly_platform.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label_weekly_platform.setObjectName("label_weekly_platform")
        self.verticalLayout_weekly_platform.addWidget(self.label_weekly_platform)
        self.line_weekly_platform = QtWidgets.QFrame(self.widget_weekly_platform)
        self.line_weekly_platform.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_weekly_platform.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_weekly_platform.setStyleSheet(
            "background-color: rgba(255, 255, 255, 100);"
        )
        self.line_weekly_platform.setObjectName("line_weekly_platform")
        self.verticalLayout_weekly_platform.addWidget(self.line_weekly_platform)
        # self.weekly_stars = QtWidgets.QLabel(self.widget_weekly)
        # self.weekly_stars.setStyleSheet("background-color: rgb(255, 255, 255, 100);\n"
        #                               "border: 5px; \n"
        #                               "border-radius: 10px;")
        # self.weekly_stars.setObjectName("weekly_stars")
        # font_textBrowser = QtGui.QFont()
        # font_textBrowser.setPointSize(16)
        # font_textBrowser.setWeight(QFont.Bold)
        # self.weekly_stars.setFont(font_textBrowser)
        # self.weekly_stars.setText("\n" + "Metrics after 50 epochs\n")
        # self.weekly_stars.setAlignment(QtCore.Qt.AlignCenter)
        self.weekly_stars2_platform = QtWidgets.QTextBrowser(
            self.widget_weekly_platform
        )
        self.weekly_stars2_platform.setStyleSheet(
            "background-color: rgb(255, 255, 255, 200);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.weekly_stars2_platform.setObjectName("weekly_stars2_platform")
        font_textBrowser = QtGui.QFont()
        font_textBrowser.setPointSize(14)
        self.weekly_stars2_platform.setFont(font_textBrowser)
        self.weekly_stars2_platform.setText(
            "\n"
            + " Chatbot                         | Fairness: 0.876 \n"
            + "                                    | Privacy  : 0.937\n"
            "                                    | Security: 0.910\n"
            " Toxicity Speech Detection| Fairness: 0.940 \n"
            "                                     | Privacy  : 0.962 \n"
            "                                     | Security: 0.908 \n"
        )
        self.weekly_stars2_platform.selectAll()
        self.weekly_stars2_platform.setAlignment(QtCore.Qt.AlignCenter)
        # self.verticalLayout_weekly.addWidget(self.weekly_stars)
        self.verticalLayout_weekly_platform.addWidget(self.weekly_stars2_platform)

        # ************************ MONTHLY PLATFORM ************************ #
        self.widget_monthly_platform = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(
            self.widget_monthly_platform.sizePolicy().hasHeightForWidth()
        )
        self.widget_monthly_platform.setSizePolicy(sizePolicy)
        self.widget_monthly_platform.setMinimumSize(QtCore.QSize(550, 0))
        self.widget_monthly_platform.setMaximumSize(QtCore.QSize(400, 400))
        self.widget_monthly_platform.setSizeIncrement(QtCore.QSize(40, 40))
        self.widget_monthly_platform.setBaseSize(QtCore.QSize(40, 40))
        self.widget_monthly_platform.setFocusPolicy(QtCore.Qt.NoFocus)
        self.widget_monthly_platform.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.widget_monthly_platform.setObjectName("widget_monthly_platform")
        self.verticalLayout_monthly_platform = QtWidgets.QVBoxLayout(
            self.widget_monthly_platform
        )
        self.verticalLayout_monthly_platform.setSizeConstraint(
            QtWidgets.QLayout.SetDefaultConstraint
        )
        self.verticalLayout_monthly_platform.setObjectName(
            "verticalLayout_monthly_platform"
        )
        spacerItem_ppml = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.label_monthly_platform = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_monthly_platform.setFont(font)
        self.label_monthly_platform.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label_monthly_platform.setObjectName("label_monthly_platform")
        self.verticalLayout_monthly_platform.addWidget(self.label_monthly_platform)
        self.line_monthly_platform = QtWidgets.QFrame(self.widget_monthly_platform)
        self.line_monthly_platform.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_monthly_platform.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_monthly_platform.setStyleSheet(
            "background-color: rgba(255, 255, 255, 100);"
        )
        self.line_monthly_platform.setObjectName("line_monthly_platform")
        self.verticalLayout_monthly_platform.addWidget(self.line_monthly_platform)
        # self.weekly_stars = QtWidgets.QLabel(self.widget_weekly)
        # self.weekly_stars.setStyleSheet("background-color: rgb(255, 255, 255, 100);\n"
        #                               "border: 5px; \n"
        #                               "border-radius: 10px;")
        # self.weekly_stars.setObjectName("weekly_stars")
        # font_textBrowser = QtGui.QFont()
        # font_textBrowser.setPointSize(16)
        # font_textBrowser.setWeight(QFont.Bold)
        # self.weekly_stars.setFont(font_textBrowser)
        # self.weekly_stars.setText("\n" + "Metrics after 50 epochs\n")
        # self.weekly_stars.setAlignment(QtCore.Qt.AlignCenter)
        self.monthly_stars2_platform = QtWidgets.QTextBrowser(
            self.widget_monthly_platform
        )
        self.monthly_stars2_platform.setStyleSheet(
            "background-color: rgb(255, 255, 255, 200);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.monthly_stars2_platform.setObjectName("monthly_stars2_platform")
        font_textBrowser = QtGui.QFont()
        font_textBrowser.setPointSize(14)
        self.monthly_stars2_platform.setFont(font_textBrowser)
        self.monthly_stars2_platform.setText(
            "\n"
            + " Chatbot                         | Fairness: 0.876 \n"
            + "                                    | Privacy  : 0.937\n"
            "                                    | Security: 0.910\n"
            " Toxicity Speech Detection| Fairness: 0.940 \n"
            "                                     | Privacy  : 0.962 \n"
            "                                     | Security: 0.908 \n"
        )
        self.monthly_stars2_platform.selectAll()
        self.monthly_stars2_platform.setAlignment(QtCore.Qt.AlignCenter)
        # self.verticalLayout_weekly.addWidget(self.weekly_stars)
        self.verticalLayout_monthly_platform.addWidget(self.monthly_stars2_platform)

        # ************************ LIFETIME PLATFORM ************************ #
        self.widget_lifetime_platform = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(
            self.widget_lifetime_platform.sizePolicy().hasHeightForWidth()
        )
        self.widget_lifetime_platform.setSizePolicy(sizePolicy)
        self.widget_lifetime_platform.setMinimumSize(QtCore.QSize(550, 0))
        self.widget_lifetime_platform.setMaximumSize(QtCore.QSize(400, 400))
        self.widget_lifetime_platform.setSizeIncrement(QtCore.QSize(40, 40))
        self.widget_lifetime_platform.setBaseSize(QtCore.QSize(40, 40))
        self.widget_lifetime_platform.setFocusPolicy(QtCore.Qt.NoFocus)
        self.widget_lifetime_platform.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.widget_lifetime_platform.setObjectName("widget_lifetime_platform")
        self.verticalLayout_lifetime_platform = QtWidgets.QVBoxLayout(
            self.widget_lifetime_platform
        )
        self.verticalLayout_lifetime_platform.setSizeConstraint(
            QtWidgets.QLayout.SetDefaultConstraint
        )
        self.verticalLayout_lifetime_platform.setObjectName(
            "verticalLayout_lifetime_platform"
        )
        spacerItem_ppml = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.label_lifetime_platform = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_lifetime_platform.setFont(font)
        self.label_lifetime_platform.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label_lifetime_platform.setObjectName("label_lifetime_platform")
        self.verticalLayout_lifetime_platform.addWidget(self.label_lifetime_platform)
        self.line_lifetime_platform = QtWidgets.QFrame(self.widget_lifetime_platform)
        self.line_lifetime_platform.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_lifetime_platform.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_lifetime_platform.setStyleSheet(
            "background-color: rgba(255, 255, 255, 100);"
        )
        self.line_lifetime_platform.setObjectName("line_lifetime_platform")
        self.verticalLayout_lifetime_platform.addWidget(self.line_lifetime_platform)
        # self.weekly_stars = QtWidgets.QLabel(self.widget_weekly)
        # self.weekly_stars.setStyleSheet("background-color: rgb(255, 255, 255, 100);\n"
        #                               "border: 5px; \n"
        #                               "border-radius: 10px;")
        # self.weekly_stars.setObjectName("weekly_stars")
        # font_textBrowser = QtGui.QFont()
        # font_textBrowser.setPointSize(16)
        # font_textBrowser.setWeight(QFont.Bold)
        # self.weekly_stars.setFont(font_textBrowser)
        # self.weekly_stars.setText("\n" + "Metrics after 50 epochs\n")
        # self.weekly_stars.setAlignment(QtCore.Qt.AlignCenter)
        self.lifetime_stars2_platform = QtWidgets.QTextBrowser(self.widget_lifetime)
        self.lifetime_stars2_platform.setStyleSheet(
            "background-color: rgb(255, 255, 255, 200);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.lifetime_stars2_platform.setObjectName("lifetime_stars2_platform")
        font_textBrowser = QtGui.QFont()
        font_textBrowser.setPointSize(14)
        self.lifetime_stars2_platform.setFont(font_textBrowser)
        self.lifetime_stars2_platform.setText(
            "\n"
            + " Chatbot                         | Fairness: 0.876 \n"
            + "                                    | Privacy  : 0.937\n"
            "                                    | Security: 0.910\n"
            " Toxicity Speech Detection| Fairness: 0.940 \n"
            "                                     | Privacy  : 0.962 \n"
            "                                     | Security: 0.908 \n"
        )
        self.lifetime_stars2_platform.selectAll()
        self.lifetime_stars2_platform.setAlignment(QtCore.Qt.AlignCenter)
        # self.verticalLayout_weekly.addWidget(self.weekly_stars)
        self.verticalLayout_lifetime_platform.addWidget(self.lifetime_stars2_platform)

        # HEREEEE
        # ******
        self.horizontalLayout_Cybersecurity = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_Cybersecurity.setObjectName(
            "horizontalLayout_Cybersecurity"
        )
        self.verticalLayout.addLayout(self.horizontalLayout_Cybersecurity)
        self.horizontalLayout_Cybersecurity.addWidget(self.widget_weekly_platform)
        self.horizontalLayout_Cybersecurity.addWidget(self.widget_monthly_platform)
        self.horizontalLayout_Cybersecurity.addWidget(self.widget_lifetime_platform)
        # *****

        # self.verticalLayout.addWidget(self.widget)
        spacerItem11 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout.addItem(spacerItem11)

        spacerItem8 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout.addItem(spacerItem8)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet(
            "background-color: rgba(0, 45, 136, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        self.label_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_3.setObjectName("label_3")

        self.verticalLayout.addWidget(self.label_3)
        spacerItem9 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout.addItem(spacerItem9)
        spacerItem10 = QtWidgets.QSpacerItem(
            20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred
        )
        self.verticalLayout.addItem(spacerItem10)
        # ******************* TOOL STATUS ******************* #
        self.verticalLayout_tool_status = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_tool_status.setObjectName("verticalLayout_tool_status")
        self.tableWidget = QTableWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet(
            "background-color: rgba(255, 255, 255, 50);\n"
            "border: 5px; \n"
            "border-radius: 10px;"
        )
        # Row count
        self.tableWidget.setRowCount(3)

        # Column count
        self.tableWidget.setColumnCount(5)
        delegate = AlignDelegate(self.tableWidget)
        # If you want to do it for all columns:
        self.tableWidget.setItemDelegate(delegate)
        self.tableWidget.horizontalHeader().setStyleSheet(
            "QHeaderView { font-size: 16pt; }"
        )
        green_light = ImageWidget(
            "figures/green_light-removebg-preview", self.tableWidget
        )
        green_light2 = ImageWidget(
            "figures/green_light-removebg-preview", self.tableWidget
        )
        green_light3 = ImageWidget(
            "figures/green_light-removebg-preview", self.tableWidget
        )
        orange_light = ImageWidget(
            "figures/orange_light-removebg-preview", self.tableWidget
        )
        orange_light2 = ImageWidget(
            "figures/orange_light-removebg-preview", self.tableWidget
        )
        red_light = ImageWidget("figures/red_light-removebg-preview", self.tableWidget)
        self.tableWidget.setItem(0, 0, QTableWidgetItem("AI Fairness"))
        self.tableWidget.setItem(
            1, 0, QTableWidgetItem("Privacy Preserving Machine Learning")
        )
        self.tableWidget.setItem(2, 0, QTableWidgetItem("AI Cybersecurity"))
        self.tableWidget.setItem(0, 1, QTableWidgetItem("7-12-2024"))
        self.tableWidget.setItem(1, 1, QTableWidgetItem("5-12-2024"))
        self.tableWidget.setItem(2, 1, QTableWidgetItem("12-12-2024"))
        self.tableWidget.setItem(0, 2, QTableWidgetItem("Yes"))
        self.tableWidget.setItem(1, 2, QTableWidgetItem("Yes"))
        self.tableWidget.setItem(2, 2, QTableWidgetItem("Yes"))
        self.tableWidget.setItem(0, 3, QTableWidgetItem("GREEN"))
        self.tableWidget.setItem(1, 3, QTableWidgetItem("GREEN"))
        self.tableWidget.setItem(2, 3, QTableWidgetItem("ORANGE"))
        self.tableWidget.setItem(0, 4, QTableWidgetItem("RED"))
        self.tableWidget.setItem(1, 4, QTableWidgetItem("GREEN"))
        self.tableWidget.setItem(2, 4, QTableWidgetItem("ORANGE"))

        self.tableWidget.setCellWidget(0, 3, green_light)
        self.tableWidget.setCellWidget(1, 3, green_light2)
        self.tableWidget.setCellWidget(2, 3, orange_light)
        self.tableWidget.setCellWidget(0, 4, red_light)
        self.tableWidget.setCellWidget(1, 4, green_light3)
        self.tableWidget.setCellWidget(2, 4, orange_light2)
        self.tableWidget.setHorizontalHeaderLabels(
            ["Name", "Last Update", "Operational", "Security", "Privacy"]
        )
        # Table will fit the screen horizontally
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.verticalLayout_tool_status.addWidget(self.tableWidget)
        # *************************************************** #

        # ***************** INFO BUTTON TOOL STATUS ***************** #
        self.pushButton_info_tool_status = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(
            self.pushButton_info_tool_status.sizePolicy().hasHeightForWidth()
        )
        self.pushButton_info_tool_status.setSizePolicy(sizePolicy)
        self.pushButton_info_tool_status.setMinimumSize(QtCore.QSize(60, 40))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(QFont.Bold)
        self.pushButton_info_tool_status.setFont(font)
        self.pushButton_info_tool_status.setAutoFillBackground(False)
        self.pushButton_info_tool_status.setStyleSheet(
            """QPushButton
                                                    {
                                                    background-color: rgb(255, 255, 255, 150); color: black;
                                                    border-color: rgb(172, 172, 172);
                                                    alternate-background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));
                                                    border-color: rgb(255, 255, 255);
                                                    }
                                                    QPushButton:pressed
                                                    {
                                                    background-color : rgb(255, 255, 255, 255); color: rgb(255,255,255);
                                                    }"""
        )
        # self.pushButton_info_cyber.setGeometry(200, 150, 100, 30)
        self.pushButton_info_tool_status.setObjectName("pushButton_info_cyber")
        # self.pushButton_info_cyber.setIcon(QIcon('info-information-icon.png'))
        self.pushButton_info_tool_status.clicked.connect(self.info_tool_status)
        self.verticalLayout_tool_status.addWidget(
            self.pushButton_info_tool_status, 0, QtCore.Qt.AlignRight
        )
        # *************************************************** #
        self.verticalLayout.addLayout(self.verticalLayout_tool_status)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.verticalLayout_5.addLayout(self.horizontalLayout)
        self.horizontalLayout_3.addLayout(self.verticalLayout_5)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1851, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        """
        Retranslates the UI elements of the MainWindow.
        This method sets the text for various UI components in the MainWindow using the
        QtCore.QCoreApplication.translate function to support internationalization.
        Args:
            MainWindow (QMainWindow): The main window object whose UI elements are being retranslated.
        UI Components:
            - MainWindow: Sets the window title.
            - pushButton: Sets the text to "Exit".
            - label_6: Sets the text to "User Visual Component" with HTML formatting.
            - label: Sets the text to "User Statistics" with HTML formatting.
            - label_plat_stats: Sets the text to "Platform Statistics" with HTML formatting.
            - label_3: Sets the text to "Tools' Status" with HTML formatting.
            - pushButton_info_tool_status: Sets the text to "(?)".
            - label_weekly: Sets the text to "Weekly Stats" with HTML formatting.
            - label_weekly_platform: Sets the text to "Weekly Stats" with HTML formatting.
            - label_monthly: Sets the text to "Monthly Stats" with HTML formatting.
            - label_monthly_platform: Sets the text to "Monthly Stats" with HTML formatting.
            - label_lifetime_platform: Sets the text to "Lifetime Stats" with HTML formatting.
        """
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Exit"))
        # self.pushButton_21.setText(_translate("MainWindow", "Button 555"))
        # print(self.pushButton_21.text())
        self.label_6.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">User Visual Component</span></p></body></html>',
            )
        )
        # self.label_2.setText(_translate("MainWindow",
        #                                 "<html><head/><body><p><span style=\" color:#ffffff;\">List of Toxic Posts</span></p></body></html>"))
        self.label.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">User Statistics</span></p></body></html>',
            )
        )
        self.label_plat_stats.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">Platform Statistics</span></p></body></html>',
            )
        )
        self.label_3.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">Tools\' Status</span></p></body></html>',
            )
        )

        self.pushButton_info_tool_status.setText(_translate("MainWindow", "(?)"))
        # self.label_4.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#ffffff;\">Statistics</span></p></body></html>"))
        # ***************************
        self.label_weekly.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">Weekly Stats</span></p></body></html>',
            )
        )
        self.label_weekly_platform.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">Weekly Stats</span></p></body></html>',
            )
        )
        self.label_monthly.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">Monthly Stats</span></p></body></html>',
            )
        )
        self.label_monthly_platform.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">Monthly Stats</span></p></body></html>',
            )
        )
        self.label_lifetime_platform.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">Lifetime Stats</span></p></body></html>',
            )
        )
        self.label_lifetime.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" color:#ffffff;">Lifetime Stats</span></p></body></html>',
            )
        )

    def close(self):
        """
        Displays a message box asking the user if they would like to exit the application.

        If the user selects 'Yes', the application will quit. If the user selects 'No', the application will continue running.
        """
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Εxit")
        msg.setText("Would you like to exit the application?")
        msg.setIcon(QtWidgets.QMessageBox.Question)
        msg.setStandardButtons(QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)
        # result = msg.question(self.centralwidget, 'Εxit', 'Would you like to exit the application?', QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)
        # msg.setStyleSheet("background-color: rgba(255, 255, 255, 150);\n"
        #                   "color: black")
        result = msg.exec_()
        if result == QtWidgets.QMessageBox.Yes:
            app.quit()
        else:
            pass

    def info_tool_status(self):
        """
        Displays a message box with the status indications of the cybersecurity tool.

        The message box contains the following status indications:
        - GREEN: Fully Secure/Private
        - ORANGE: Some Security/Privacy Criteria Are Not Fulfilled
        - RED: Not Secure/Private

        The message box has the title "Cybersecurity Tool Indications" and uses the Arial font with size 14.
        """
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Tools' Status Indications")
        font = QtGui.QFont("Arial", 14)
        msg.setFont(font)
        msg.setText(
            "GREEN : Fully Secure/Private \nORANGE : Some Security/Privacy Criteria Are \n                    Not Fulfilled" +
                    " \nRED : Not Secure/Private "
        )
        msg.setIcon(QtWidgets.QMessageBox.Information)
        x = msg.exec_()

    def show_ppml_stats(self):
        """
        Displays a dialog with the Privacy Preserving Machine Learning Tool Metrics.

        This method creates a QDialog window that shows an image of the metrics
        for the Privacy Preserving Machine Learning Tool. The image is loaded
        from "figures/models_vpe.png" and displayed in a QLabel within the dialog.
        The dialog is resized to fit the dimensions of the image and is shown
        modally.

        Returns:
            None
        """
        dialog = QtWidgets.QDialog()
        dialog.setWindowTitle("Privacy Preserving Machine Learning Tool Metrics")
        lay = QtWidgets.QVBoxLayout(dialog)
        label = QtWidgets.QLabel()
        pixmap = QtGui.QPixmap("figures/models_vpe.png")
        label.setPixmap(pixmap)
        label.setScaledContents(True)
        dialog.resize(pixmap.width(), pixmap.height())
        lay.addWidget(label)
        dialog.show()
        dialog.exec_()


class ImageWidget(QtWidgets.QWidget):

    def __init__(self, imagePath, parent):
        super(ImageWidget, self).__init__(parent)
        self.picture = QtGui.QPixmap(imagePath)

    def paintEvent(self, event):
        painter = QtGui.QPainter(self)
        painter.drawPixmap(0, 0, self.picture)


class AlignDelegate(QtWidgets.QStyledItemDelegate):
    def initStyleOption(self, option, index):
        super(AlignDelegate, self).initStyleOption(option, index)
        option.displayAlignment = QtCore.Qt.AlignCenter


if __name__ == "__main__":

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow_User()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
